---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by SK.
--- DateTime: 2018/11/26 14:06
---


function CreateCacheManager()
    ---@class CachePool 管理加载结果，如果加载成功，保存加载对象，否则保存加载错误
    local CacheManager = {}

    ---已经加载的缓存
    ---@generic T : ObjectCache
    ---@type table<string,T>
    local loadedCaches = {}

    ---加载错误信息
    ---@type table<string,string>
    local loadErrors = {}

    ---获取缓存
    ---@param url string
    ---@return ObjectCache
    function CacheManager:GetCache(url)
        return loadedCaches[url]
    end

    ---是否存在缓存
    ---@param url string
    ---@return boolean
    function CacheManager:ContainsCache(url)
        return self:GetCache(url)~=nil
    end

    ---获取错误信息
    ---@return string
    function CacheManager:GetError(url)
        return loadErrors.url
    end

    ---保存资源加载错误
    ---@param err string
    function CacheManager:SaveError(key, err)
        assert(err~= nil,"Nil argument:err")
        loadErrors[key] = err
    end

    ---添加缓存
    ---@param cache ObjectCache
    function CacheManager:SaveCache(cache)
        assert(cache~= nil,"Nil argument:cache")
        if loadedCaches[cache:GetKey()] then
            error("The same key has exist! key :"..cache.key,1)
        else
            loadedCaches[cache:GetKey()]= cache
        end
    end

    ---卸载缓存
    ---@param url string
    function CacheManager:ClearCache(url)
        local c = self:GetCache(url)
        if c ~= nil then
            loadedCaches[url] = nil
            c:Unload()
        end
        loadErrors[url] = nil
    end

    return CacheManager
end